<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.itwillbs.mapper.usersMapper">
  	
  	<!-- 테이블의 컬럼명과 VO객체의 정보를 매핑 --> 
  	 <resultMap type="com.itwillbs.domain.UsersVO" id="usersMap">
  	 	<id property="username" column="username"/>
  	 	<result property="username" column="username"/>
  	 	<result property="password" column="password"/>
  	 	<result property="user_per_name" column="user_per_name"/>
  	 	<result property="user_pos" column="user_pos"/>
  	 	<result property="user_phone" column="user_phone"/>

  	 	<result property="user_email" column="user_email"/>
  	 	<result property="enabled" column="enabled"/>
		<collection property="authList" resultMap="authMap"></collection>
  	 </resultMap>
  	 
  	 <resultMap type="com.itwillbs.domain.AuthoritiesVO" id="authMap">
  		<result property="username" column="username"/>
  		<result property="authority" column="authority"/>
  	 </resultMap>
  	 
  	 
  	 
  	 
  	 
  	 
  	 
  	 
  	 <!-- 시간정보 조회 -->
  	 <select id="getTime" resultType="string">
  	 	select now()  	 
  	 </select>
  	 
  	 <!-- 회원가입 -->
  	 <insert id="memberJoin" >
  	 	insert into users (username,password,username,user_email) 
 		values(#{username},#{password},#{username},#{user_email})
  	 </insert>
  	 
  	 <!-- 로그인체크 -->
  	 <select id="loginCheck" resultType="com.itwillbs.domain.UsersVO">
  	 	select * from users 
  	 	where username=#{username} and password=#{password}  	 
  	 </select>
  	 
  	 
  	 <!-- 회원정보 조회 -->
  	 <select id="getMember" resultType="com.itwillbs.domain.UsersVO">
  	 	select * from users 
  	 	where username=#{username}
  	 </select>
  	 
  	 <!-- 회원정보 수정 -->
  	 <update id="updateVO">
  	 	update users set username=#{username},user_email=#{user_email},updatedate=now() 
  	 	where username=#{username} and password=#{password}	
  	 </update>
  	 
  	 <!-- 회원정보 삭제 -->
	 <delete id="deleteVO">
	    delete from users 
	    where username=#{username} and password=#{password}	    	 
	 </delete>  	
	 
	 
	 <!-- 회원정보 목록 -->
	 <select id="memberList" resultType="com.itwillbs.domain.UsersVO">
	 	select * from users	 
	 </select> 	 
  	 
  	 
  	 <!-- 회원정보와 인증정보를 한번에 조회(Join) -->
	<select id="readMemberAuth" resultMap="usersMap">
		select
			user.username,user.password,user.user_per_name,user.user_pos,user.user_phone,enabled,authority
		from 
			users user 
		join 
			authorities auth
		on 
			user.username = auth.username
		where 
			user.username=#{username}
	</select>
  	 
  	 
  	 
  	 
  	 
  	 
  	 
  	 
  	 
  	 
  	 
  
  
  </mapper>