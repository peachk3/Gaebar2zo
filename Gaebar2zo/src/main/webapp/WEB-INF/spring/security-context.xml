<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:security="http://www.springframework.org/schema/security"
   xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
                  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

      <!-- 시큐리티에 필요한 객체 선언 -->
      <bean id="customAccessDenied" class="com.itwillbs.security.CustomAccessDeniedHandler"/>
      <bean id="customLoginSuccess" class="com.itwillbs.security.CustomLoginSuccessHandler"/>
   
<!--       <bean id="customNoPasswordEncoder" class="com.itwillbs.security.CustomNoPasswordEncoder"/> -->

      <!-- 암호화 처리를 위한 객체 생성 -->
      <bean id="bcryptPasswordEncoder"
         class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
      

<security:http>
    <!-- 로그인 페이지는 모든 사용자가 접근 가능하도록 설정 -->
    <security:intercept-url pattern="/Styleboso/loginout/login" access="permitAll"/>
    
    <!-- 메인 페이지는 인증된 사용자만 접근 가능하도록 설정 -->
    <security:intercept-url pattern="/Styleboso/loginout/main" access="isAuthenticated()"/>
    
    <!-- 나머지 URL 패턴은 이전 설정대로 유지 -->
    <security:intercept-url pattern="/Styleboso/system/**" access="hasRole('ROLE_ADMIN')"/>
    <security:intercept-url pattern="/**/*Add.jsp" access="hasAnyRole('ROLE_ADMIN', 'ROLE_MANAGER')"/>
    <security:intercept-url pattern="/**/*List.jsp" access="hasAnyRole('ROLE_ADMIN', 'ROLE_MANAGER', 'ROLE_MEMBER')"/>
    <security:intercept-url pattern="/**" access="isAuthenticated()"/>

    <security:form-login 
        login-page="/Styleboso/loginout/login" 
        authentication-success-handler-ref="customLoginSuccess"/>
    
    <security:logout logout-url="/Styleboso/loginout/logout" invalidate-session="true"/>
    
    <security:access-denied-handler ref="customAccessDenied" />
</security:http>



<security:authentication-manager>
    <security:authentication-provider>
        <security:jdbc-user-service data-source-ref="dataSource"
            users-by-username-query="select username, password, enabled from users where username=?"
            authorities-by-username-query="select username, authority from authorities where username=?"/>
        <security:password-encoder ref="bcryptPasswordEncoder"/>
    </security:authentication-provider>
</security:authentication-manager>



</beans>