<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.itwillbs.mapper.systemMapper">

    <!-- 사용자 리스트 출력 -->
    <select id="employeeListAll" resultType="UsersVO">
        <![CDATA[
        SELECT * FROM users
        ]]>
        <where>
            <if test="searchType != null and keyword != null and keyword != ''">
                <choose>
                    <when test="searchType == 'code'">
                        AND username LIKE CONCAT('%', #{keyword}, '%')
                    </when>
                    <when test="searchType == 'name'">
                        AND user_per_name LIKE CONCAT('%', #{keyword}, '%')
                    </when>
                    <when test="searchType == 'position'">
                        AND user_pos LIKE CONCAT('%', #{keyword}, '%')
                    </when>
                    <when test="searchType == 'email'">
                        AND user_email LIKE CONCAT('%', #{keyword}, '%')
                    </when>
                    <when test="searchType == 'phone'">
                        AND user_phone LIKE CONCAT('%', #{keyword}, '%')
                    </when>
                    <otherwise>
                        AND (username LIKE CONCAT('%', #{keyword}, '%')
                        OR user_per_name LIKE CONCAT('%', #{keyword}, '%')
                        OR user_pos LIKE CONCAT('%', #{keyword}, '%')
                        OR user_email LIKE CONCAT('%', #{keyword}, '%')
                        OR user_phone LIKE CONCAT('%', #{keyword}, '%'))
                    </otherwise>
                </choose>
            </if>
        </where>
        <![CDATA[
        ORDER BY username
        LIMIT #{pageStart}, #{pageSize}
        ]]>
    </select>

    <!-- 사용자 수 카운트 -->
    <select id="totalUserCount" resultType="int">
        SELECT count(*) FROM users
        <where>
            <if test="searchType != null and keyword != null and keyword != ''">
                <choose>
                    <when test="searchType == 'code'">
                        AND username LIKE CONCAT('%', #{keyword}, '%')
                    </when>
                    <when test="searchType == 'name'">
                        AND user_per_name LIKE CONCAT('%', #{keyword}, '%')
                    </when>
                    <when test="searchType == 'position'">
                        AND user_pos LIKE CONCAT('%', #{keyword}, '%')
                    </when>
                    <when test="searchType == 'email'">
                        AND user_email LIKE CONCAT('%', #{keyword}, '%')
                    </when>
                    <when test="searchType == 'phone'">
                        AND user_phone LIKE CONCAT('%', #{keyword}, '%')
                    </when>
                    <otherwise>
                        AND (username LIKE CONCAT('%', #{keyword}, '%')
                        OR user_per_name LIKE CONCAT('%', #{keyword}, '%')
                        OR user_pos LIKE CONCAT('%', #{keyword}, '%')
                        OR user_email LIKE CONCAT('%', #{keyword}, '%')
                        OR user_phone LIKE CONCAT('%', #{keyword}, '%'))
                    </otherwise>
                </choose>
            </if>
        </where>
    </select>

    <!-- 이메일 중복체크 -->
    <select id="emailCheck" parameterType="String" resultType="int">
        SELECT count(*) FROM users WHERE user_email = #{user_email}
    </select>

    <!-- 전화번호 중복체크 -->
    <select id="phoneCheck" parameterType="String" resultType="int">
        SELECT count(*) FROM users WHERE user_phone = #{user_phone}
    </select>

    <!-- 직책 권한 추가 -->
    <insert id="addEmpAuth" parameterType="AuthoritiesVO">
        INSERT INTO authorities (username, authority)
        VALUES (#{username}, #{authority})
    </insert>

    <!-- 사용자 ID 생성 -->
    <select id="addEmpUsername" resultType="String">
        SELECT CONCAT('US', LPAD(COALESCE(MAX(CAST(SUBSTRING(username, 3) AS UNSIGNED)), 0) + 1, 4, '0'))
        FROM users
    </select>

    <!-- 사용자 등록 -->
    <insert id="addEmp" parameterType="UsersVO">
        INSERT INTO users (username, user_per_name, password, user_email, user_pos, user_phone)
        VALUES (
            #{username},
            #{user_per_name},
            #{password},
            #{user_email},
            #{user_pos},
            #{user_phone}
        )
    </insert>

    <!-- 사용자 권한 업데이트 -->
	 <update id="updateEmpAuth">
       UPDATE authorities
    	SET authority = CASE
	        WHEN #{user_pos} = '운영자' THEN 'ROLE_ADMIN'
	        WHEN #{user_pos} = '관리자' THEN 'ROLE_MANAGER'
	        WHEN #{user_pos} = '사원' THEN 'ROLE_MEMBER'
        ELSE authority
 	   END
    WHERE username = #{username}
    </update>

    <!-- 사용자 업데이트 -->
     <update id="updateEmp">
        UPDATE users
        SET 
            user_phone = #{user_phone},
            user_email = #{user_email},
            user_pos = #{user_pos}
        WHERE username = #{username}
    </update>



<!--  <update id="updateEmp">
	UPDATE users u
	JOIN authorities a ON u.username = a.username
	SET 
		u.user_phone = #{user_phone},
		u.user_email = #{user_email},
		u.user_pos = #{user_pos},
		a.authority = CASE
			WHEN #{user_pos} = '운영자' THEN 'ROLE_ADMIN'
			WHEN #{user_pos} = '관리자' THEN 'ROLE_MANAGER'
			WHEN #{user_pos} = '사원' THEN 'ROLE_MEMBER'
			ELSE a.authority
		END
	WHERE u.username = #{username}
</update>  -->

	

    <!-- 사용자 권한 삭제 -->
    <delete id="deleteEmpAuth" parameterType="UsersVO">
        DELETE FROM authorities
        WHERE username IN
        <foreach item="username" index="index" collection="list" open="(" separator="," close=")">
            #{username}
        </foreach>
    </delete>

    <!-- 사용자 삭제 -->
    <delete id="deleteEmp" parameterType="UsersVO">
        DELETE FROM users
        WHERE username IN
        <foreach item="username" index="index" collection="list" open="(" separator="," close=")">
            #{username}
        </foreach>
    </delete>

    <!-- 공통코드 전체 리스트 출력 -->
    <select id="codeListAll" resultType="CodeVO">
        SELECT * FROM code
    </select>

    <!-- 공통코드 등록 -->
    <insert id="saveGroupCode" parameterType="CodeVO">
        INSERT INTO code (group_code, group_name)
        VALUES (#{group_code}, #{group_name})
    </insert>

    <!-- 공통코드 수정 -->
    <update id="updateCode">
        UPDATE code
        SET group_name = #{group_name}
        WHERE group_code = #{group_code}
    </update>

    <!-- 공통코드 삭제 -->
    <delete id="deleteCode" parameterType="CodeVO">
        DELETE FROM code
        WHERE group_code IN 
        <foreach item="group_code" index="index" collection="list" open="(" separator="," close=")">
            #{group_code}
        </foreach>
    </delete>

    <!-- 품목공통코드 전체 리스트 출력 -->
    <select id="itemCodeListAll" resultType="ItemCodeVO">
        SELECT * FROM item_code
        WHERE m_cate_item_code = #{group_code}
    </select>

    <!-- 품목공통코드 수정 -->
    <update id="updateItemCode">
        UPDATE item_code
        SET s_cate_item_name = #{s_cate_item_name}
        WHERE s_cate_item_code = #{s_cate_item_code}
    </update>

    <!-- 품목공통코드 삭제 -->
    <delete id="deleteItemCode">
        DELETE FROM item_code
        WHERE s_cate_item_code IN 
        <foreach item="s_cate_item_code" collection="list" open="(" separator="," close=")">
            #{s_cate_item_code}
        </foreach>
    </delete>

    <!-- 품목공통코드 등록 -->
    <insert id="saveItemCode" parameterType="ItemCodeVO">
        INSERT INTO item_code (s_cate_item_code, s_cate_item_name, m_cate_item_code)
        VALUES (
            #{s_cate_item_code}, 
            #{s_cate_item_name}, 
            substring(#{s_cate_item_code}, 1, 2)
        )
    </insert>

</mapper>