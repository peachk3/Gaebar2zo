<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itwillbs.mapper.stockMapper">

	<resultMap type="com.itwillbs.domain.TransactionVO"
		id="transMap">
		<id property="tran_num" column="tran_num" />
		<result property="tran_num" column="tran_num" />
		<result property="top_tran_num" column="top_tran_num" />
		<result property="cli_num" column="cli_num" />
		<result property="pic_username" column="pic_username" />
		<result property="tran_date" column="tran_date" />
		<result property="rec_date" column="rec_date" />
		<result property="rel_date" column="rel_date" />
		<result property="due_date" column="due_date" />
		<result property="pro_status" column="pro_status" />
		<result property="tran_cate_code" column="tran_cate_code" />
		<result property="comm" column="comm" />
		<!-- <collection property="goodsList" resultMap="goodsMap"></collection> -->
		<collection property="itemList" resultMap="itemMap"></collection>
		<collection property="inchangeList" resultMap="inchangeMap"></collection>
		<collection property="clientList" resultMap="clientMap"></collection>
		<collection property="userList" resultMap="userMap"></collection>
	</resultMap>


	<resultMap type="com.itwillbs.domain.ItemVO" id="itemMap">
		<id property="item_num" column="item_num" />
		<result property="item_num" column="item_num" />
		<result property="item_cate_code" column="item_cate_code" />
		<result property="item_cli_code" column="item_cli_code" />
		<result property="item_name" column="item_name" />
		<result property="item_mat" column="item_mat" />
		<result property="comm" column="comm" />
		<collection property="tranGoodsList"
			resultMap="tranGoodsMap"></collection>
	</resultMap>

	<resultMap type="com.itwillbs.domain.TransactionGoodsVO"
		id="tranGoodsMap">
		<id property="tran_num" column="tran_num" />
		<id property="goods_num" column="goods_num" />
		<result property="tran_num" column="tran_num" />
		<result property="goods_num" column="goods_num" />
		<result property="goods_qty" column="goods_qty" />
	</resultMap>

	<resultMap type="com.itwillbs.domain.InventoryChangeVO"
		id="inchangeMap">
		<id property="tran_num" column="tran_num" />
		<id property="inven_num" column="inven_num" />
		<result property="tran_num" column="tran_num" />
		<result property="inven_num" column="inven_num" />
		<result property="inven_qty" column="inven_qty" />
	</resultMap>
	<!-- item / inventory_change -->

	<resultMap type="com.itwillbs.domain.ClientVO"
		id="clientMap">
		<id property="cli_num" column="cli_num" />
		<result property="cli_num" column="cli_num" />
		<result property="cli_name" column="cli_name" />
		<result property="cli_crn" column="cli_crn" />
		<result property="cli_cate" column="cli_cate" />
		<result property="cli_ind" column="cli_ind" />
		<result property="cli_add1" column="cli_add1" />
		<result property="cli_add2" column="cli_add2" />
		<result property="cli_tel" column="cli_tel" />
		<result property="cli_rep" column="cli_rep" />
		<result property="cli_email" column="cli_email" />
		<result property="pic_username" column="pic_username" />
		<result property="cli_id" column="cli_id" />
	</resultMap>

	<resultMap type="com.itwillbs.domain.UsersVO"
		id="userMap">
		<id property="username" column="username" />
		<result property="username" column="username" />
		<result property="user_per_name" column="user_per_name" />
		<result property="password" column="password" />
		<result property="user_email" column="user_email" />
		<result property="user_pos" column="user_pos" />
		<result property="user_phone" column="user_phone" />
		<result property="enabled" column="enabled" />
	</resultMap>




	<!-- 입고 리스트 호출 -->
	<select id="receivingList" resultMap="transMap">
		select distinct
		tr.tran_num,top_tran_num,cli_num,pic_username,rec_date,
		tran_date,rel_date,due_date,pro_status,tran_cate_code,comm,go.goods_num,goods_qty,
		go.item_num,go.item_name,inven_num
		from (select
		tr.tran_num,top_tran_num,cli_num,pic_username,
		tran_date,rel_date,due_date,pro_status,tran_cate_code,comm, goods_num,
		goods_qty,rec_date
		from transaction tr
		join transaction_goods trg
		on tr.top_tran_num = trg.tran_num) tr
		join (select item.item_num,
		goods_num, item_name
		from item join goods
		on item.item_num = goods.item_num
		where goods.item_num in (select item_num
		from goods go
		where goods_num in (select distinct trg.goods_num
		from transaction tr
		join transaction_goods trg
		on tr.top_tran_num = trg.tran_num))) go
		on tr.goods_num = go.goods_num
		join (select tran_num, ic.inven_num, goods_num
		from inventory inv join inventory_change ic
		on inv.inven_num = ic.inven_num) ic
		on tr.tran_num = ic.tran_num and tr.goods_num = ic.goods_num
		WHERE tr.tran_num like 'RC%' and pro_status in ("입고 예정","입고 완료")
	</select>

	<!-- 출고 리스트 호출 -->
	<select id="releaseList" resultMap="transMap">
select distinct
		tr.tran_num,top_tran_num,cli_num,pic_username,rec_date,
		tran_date,rel_date,due_date,pro_status,tran_cate_code,comm,go.goods_num,goods_qty,
		go.item_num,go.item_name,inven_num
		from (select
		tr.tran_num,top_tran_num,cli_num,pic_username,
		tran_date,rel_date,due_date,pro_status,tran_cate_code,comm, goods_num,
		goods_qty,rec_date
		from transaction tr
		join transaction_goods trg
		on tr.top_tran_num = trg.tran_num) tr
		join (select item.item_num,
		goods_num, item_name
		from item join goods
		on item.item_num = goods.item_num
		where goods.item_num in (select item_num
		from goods go
		where goods_num in (select distinct trg.goods_num
		from transaction tr
		join transaction_goods trg
		on tr.top_tran_num = trg.tran_num))) go
		on tr.goods_num = go.goods_num
		join (select tran_num, ic.inven_num, goods_num
		from inventory inv join inventory_change ic
		on inv.inven_num = ic.inven_num) ic
		on tr.tran_num = ic.tran_num and tr.goods_num = ic.goods_num
		WHERE tr.tran_num like 'RL%' and pro_status in ("출고 준비","출고 완료")
	</select>
 

<!-- 입고/출고 transaction 삭제 -->
   	<delete id="deleteTransactionList">
   		delete from transaction
   		where tran_num in
   		<foreach collection="list" item="tran_num" open="(" separator="," close=")">
   			#{tran_num}
   		</foreach>
   	</delete>

<!-- 입고/출고 inventory_change 삭제 -->
   	<delete id="deleteInventoryChange">
	  	delete from inventory_change
	    where tran_num in
   		 <foreach collection="list" item="tran_num" open="(" separator="," close=")">
      				  #{tran_num}
   		 </foreach>
   	</delete>




	<!-- 입고 등록_TransactionVO -->
	<insert id="stockReceivingAdd_TransactionVO">
	    insert into transaction(tran_num,top_tran_num, cli_num, pic_username, tran_date, pro_status, tran_cate_code, comm)
	    values(#{tran_num}, #{top_tran_num},#{cli_num}, #{pic_username}, #{tran_date}, "입고 예정" , #{tran_cate_code}, #{comm})
	</insert>	

	<!-- 입고/출고 등록_InventoryChangeVO-->
	<insert id="stockAdd_InventoryChangeVO">
	   insert into inventory_change
	   values(#{tran_num},#{inven_num},#{inven_qty})
	</insert>


	<!-- tran_num 출력 -->
	<select id="getTranNum" resultType="String">
		<![CDATA[
			select DISTINCT CONCAT(#{tran_cate_code}, LPAD(MAX(CAST(SUBSTRING(tran_num, 3) AS UNSIGNED)) + 1, 3, '0')) from transaction
		]]>
	</select>

	<!-- 출고 등록_TransactionVO -->
	<insert id="stockReleaseAdd_TransactionVO">
	    insert into transaction(tran_num,top_tran_num, cli_num, pic_username, tran_date, pro_status, tran_cate_code, comm)
	    values(#{tran_num}, #{top_tran_num},#{cli_num}, #{pic_username}, #{tran_date}, "출고 준비" , #{tran_cate_code}, #{comm})
	</insert>	

	<!-- 출고 등록_InventoryChangeVO-->
	<insert id="stockReleaseAdd_InventoryChangeVO">
	   insert into inventory_change
	   values(#{tran_num},#{inven_num},#{inven_qty})
	</insert>


	<!-- 입고 / 출고 수정 -->
	<update id="updateDetails">
		UPDATE transaction
		SET tran_date=#{tran_date},pic_username=#{pic_username}
		WHERE tran_num=#{tran_num}
	</update>
	
	<!-- 입고 등록시 상위거래번호 상태 변경 -->
		<update id="updateReceivingTopTranstatus">
			UPDATE transaction
			set pro_status = "입고 예정"
			where tran_num=#{top_tran_num}		
		</update>

	<!-- 출고 등록시 상위거래번호 상태 변경 -->
		<update id="updateReleaseTopTranstatus">
			UPDATE transaction
			set pro_status = "출고 준비"
			where tran_num=#{top_tran_num}		
		</update>


	<!-- InventoryVO resultMap -->
	<resultMap type="com.itwillbs.domain.InventoryVO"
		id="invenMap">
		<id property="inven_num" column="inven_num" />
		<result property="inven_num" column="inven_num" />
		<result property="wh_num" column="wh_num" />
		<result property="goods_num" column="goods_num" />
		<result property="inven_qty" column="inven_qty" />
		<collection property="itemList" resultMap="itemMap"></collection>
		<collection property="goodsList" resultMap="goodsMap"></collection>
		<collection property="warehouseList" resultMap="wareMap"></collection>
		<collection property="warehouseCodeList" resultMap="wareCodeMap"></collection>
	</resultMap>


<!-- WarehouseCodeVO resultMap -->
	<resultMap type="com.itwillbs.domain.WarehouseCodeVO"
		id="wareCodeMap">
		<id property="s_cate_wh_code" column="s_cate_wh_code" />
		<result property="s_cate_wh_code" column="s_cate_wh_code" />
		<result property="s_cate_wh_name" column="s_cate_wh_name" />
		<result property="wh_tel" column="wh_tel" />
		<result property="wh_postCode" column="wh_postCode" />
		<result property="wh_add1" column="wh_add1" />
		<result property="wh_add2" column="wh_add2" />
		<result property="wh_add3" column="wh_add3" />
		<result property="wh_man" column="wh_man" />
		<result property="wh_status" column="wh_status" />
		<result property="m_cate_wh_code" column="m_cate_wh_code" />
	</resultMap>

	<!-- WarehouseVO resultMap -->
	<resultMap type="com.itwillbs.domain.WarehouseVO"
		id="wareMap">
		<id property="wh_num" column="wh_num" />
		<result property="wh_num" column="wh_num" />
		<result property="wh_name" column="wh_name" />
		<result property="wh_zone" column="wh_zone" />
		<result property="wh_rack" column="wh_rack" />
		<result property="wh_row" column="wh_row" />
		<result property="wh_column" column="wh_column" />
		<result property="wh_code" column="wh_code" />
	</resultMap>

	<!-- GoodsVO resultMap -->
	<resultMap type="com.itwillbs.domain.GoodsVO" id="goodsMap">
		<id property="goods_num" column="goods_num" />
		<result property="goods_num" column="goods_num" />
		<result property="item_num" column="item_num" />
		<result property="goods_color" column="goods_color" />
		<result property="goods_size" column="goods_size" />
	</resultMap>

	<!-- 재고 리스트 호출 -->
	<select id="getStockList" resultMap="invenMap">
	    <![CDATA[
	    SELECT y.inven_num, i.item_name, g.goods_size, g.goods_color, w.wh_name, w.wh_zone, w.wh_rack, SUM(inven_qty) as inven_qty
	    FROM inventory y
	    JOIN warehouse w ON y.wh_num = w.wh_num
	    JOIN goods g ON y.goods_num = g.goods_num
	    JOIN item i ON i.item_num = g.item_num
	    ]]>
	    <where>
	        <if test="searchType != null and keyword != null and keyword != ''">
	            <choose>
	                <when test="searchType == 'code'">
	                    AND y.inven_num LIKE CONCAT('%', #{keyword}, '%')
	                </when>
	                <when test="searchType == 'name'">
	                    AND i.item_name LIKE CONCAT('%', #{keyword}, '%')
	                </when>
	                <when test="searchType == 'warehouse'">
	                    AND w.wh_name LIKE CONCAT('%', #{keyword}, '%')
	                </when>
	                <when test="searchType == 'color'">
	                    AND g.goods_color LIKE CONCAT('%', #{keyword}, '%')
	                </when>
	                <otherwise>
	                    AND (y.inven_num LIKE CONCAT('%', #{keyword}, '%')
	                    OR i.item_name LIKE CONCAT('%', #{keyword}, '%')
	                    OR w.wh_name LIKE CONCAT('%', #{keyword}, '%')
	                    OR g.goods_color LIKE CONCAT('%', #{keyword}, '%'))
	                </otherwise>
	            </choose>
	        </if>
	    </where>
	    <![CDATA[
	    GROUP BY y.inven_num, i.item_name, g.goods_size, g.goods_color, w.wh_name, w.wh_zone, w.wh_rack
	    HAVING COUNT(y.inven_num) >= 0
	    ORDER BY y.inven_num, i.item_name, g.goods_size, g.goods_color, w.wh_name, w.wh_zone, w.wh_rack
	    LIMIT #{pageStart}, #{pageSize}
	    ]]>
	</select>
	
	<select id="totalCount" resultType="int">
	    <![CDATA[
	    SELECT COUNT(*) FROM (
	        SELECT y.inven_num
	        FROM inventory y
	        JOIN warehouse w ON y.wh_num = w.wh_num
	        JOIN goods g ON y.goods_num = g.goods_num
	        JOIN item i ON i.item_num = g.item_num
	    ]]>
	    <where>
	        <if test="searchType != null and keyword != null and keyword != ''">
	            <choose>
	                <when test="searchType == 'code'">
	                    AND y.inven_num LIKE CONCAT('%', #{keyword}, '%')
	                </when>
	                <when test="searchType == 'name'">
	                    AND i.item_name LIKE CONCAT('%', #{keyword}, '%')
	                </when>
	                <when test="searchType == 'warehouse'">
	                    AND w.wh_name LIKE CONCAT('%', #{keyword}, '%')
	                </when>
	                <otherwise>
	                    AND (y.inven_num LIKE CONCAT('%', #{keyword}, '%')
	                    OR i.item_name LIKE CONCAT('%', #{keyword}, '%')
	                    OR w.wh_name LIKE CONCAT('%', #{keyword}, '%'))
	                </otherwise>
	            </choose>
	        </if>
	    </where>
	    <![CDATA[
	        GROUP BY y.inven_num, i.item_name, w.wh_name, w.wh_zone, w.wh_rack
	        HAVING COUNT(y.inven_num) >= 0
	    ) AS subquery
	    ]]>
	</select>
	
	<!-- 교환 리스트 호출 -->
	<select id="exchangeList" resultMap="transMap">
		SELECT
		    tr.tran_num, tr.top_tran_num, tr.cli_num, c.cli_name, tr.pic_username, tr.rec_date,
		    tr.tran_date, tr.rel_date, tr.due_date, tr.pro_status, tr.tran_cate_code, tr.comm, 
		    go.goods_num, tr.goods_qty, go.item_num, go.item_name, ic.inven_num
		FROM (
		    SELECT
		        tr.tran_num, tr.top_tran_num, tr.cli_num, tr.pic_username,
		        tr.tran_date, tr.rel_date, tr.due_date, tr.pro_status, tr.tran_cate_code, tr.comm, 
		        trg.goods_num, trg.goods_qty, tr.rec_date
		    FROM transaction tr
		    JOIN transaction_goods trg ON tr.top_tran_num = trg.tran_num
		) tr
		JOIN client c ON tr.cli_num = c.cli_num
		JOIN (
		    SELECT item.item_num, goods.goods_num, item.item_name
		    FROM item 
		    JOIN goods ON item.item_num = goods.item_num
		    WHERE goods.item_num IN (
		        SELECT item_num
		        FROM goods
		        WHERE goods_num IN (
		            SELECT trg.goods_num
		            FROM transaction tr
		            JOIN transaction_goods trg ON tr.top_tran_num = trg.tran_num
		        )
		    )
		) go ON tr.goods_num = go.goods_num
		JOIN inventory_change ic ON tr.tran_num = ic.tran_num 
		WHERE tr.tran_num LIKE 'EX%'
	</select>
	
	<!-- 교환 등록 -->
	
	<!-- 반품 리스트 호출 -->
	<select id="returnList" resultMap="transMap">
		SELECT
		    tr.tran_num, tr.top_tran_num, tr.cli_num, c.cli_name, tr.pic_username, tr.rec_date,
		    tr.tran_date, tr.rel_date, tr.due_date, tr.pro_status, tr.tran_cate_code, tr.comm, 
		    go.goods_num, tr.goods_qty, go.item_num, go.item_name, ic.inven_num
		FROM (
		    SELECT
		        tr.tran_num, tr.top_tran_num, tr.cli_num, tr.pic_username,
		        tr.tran_date, tr.rel_date, tr.due_date, tr.pro_status, tr.tran_cate_code, tr.comm, 
		        trg.goods_num, trg.goods_qty, tr.rec_date
		    FROM transaction tr
		    JOIN transaction_goods trg ON tr.top_tran_num = trg.tran_num
		) tr
		JOIN client c ON tr.cli_num = c.cli_num
		JOIN (
		    SELECT item.item_num, goods.goods_num, item.item_name
		    FROM item 
		    JOIN goods ON item.item_num = goods.item_num
		    WHERE goods.item_num IN (
		        SELECT item_num
		        FROM goods
		        WHERE goods_num IN (
		            SELECT trg.goods_num
		            FROM transaction tr
		            JOIN transaction_goods trg ON tr.top_tran_num = trg.tran_num
		        )
		    )
		) go ON tr.goods_num = go.goods_num
		JOIN inventory_change ic ON tr.tran_num = ic.tran_num 
		WHERE tr.tran_num LIKE 'RE%'
	</select>

	<!-- 반품 등록 -->
	<insert id="returnAdd" useGeneratedKeys="true" keyProperty="tran_num">
		insert into transaction(tran_num, cli_num, pic_username, tran_date, ex_due_date, pro_status, tran_cate_code, comm)
		values(#{tran_num}, #{cli_num}, #{pic_username}, #{tran_date}, #{ex_due_date}, "반품 접수" , #{tran_cate_code}, #{comm})
	</insert>




	<!-- 출고 모달창 - 발주리스트,거래처,담당자,입고예정일 출력 -->
	<select id="getTransactionDetails2" resultType="map">
		select top_tran_num,tra.cli_num,cl.cli_name,tra.pic_username,user.user_per_name,tra.tran_date
		from transaction tra
		join client cl
		on tra.cli_num = cl.cli_num
		join users user
		on tra.pic_username = user.username
		WHERE tra.tran_num like 'RL%'  and tra.tran_num = #{tran_num}
	</select>
	
	
	<!-- 입고 모달창 - 발주리스트,거래처,담당자,입고예정일 출력 -->
	<select id="getTransactionDetails" resultType="map">
		select top_tran_num,tra.cli_num,cl.cli_name,tra.pic_username,user.user_per_name,tra.tran_date
		from transaction tra
		join client cl
		on tra.cli_num = cl.cli_num
		join users user
		on tra.pic_username = user.username
		WHERE tra.tran_num like 'RC%'  and tra.tran_num = #{tran_num}
	</select>

	<!-- 입고 모달창 - 품목 정보 가져오기 -->
	<select id="getTransactionItems" resultType="map">
		select item.item_num, item.item_name, trg.goods_qty, tra.top_tran_num, tra.comm, ich.inven_num, tra.tran_num,g.goods_num
	    from transaction tra
	    join transaction_goods trg on tra.top_tran_num = trg.tran_num
	    join inventory_change ich on ich.tran_num = tra.tran_num
	    join goods g on trg.goods_num = g.goods_num
	    join item item on item.item_num = g.item_num
	    where tra.top_tran_num = #{top_tran_num}
	</select>



	<!-- 재고 데이터 호출 -->
  <select id="getInventoryList" resultMap="invenMap">
        SELECT   inven.inven_num,inven.wh_num,inven.goods_num,inven.inven_qty,warecode.s_cate_wh_name
        FROM inventory inven
        JOIN warehouse ware ON ware.wh_num = inven.wh_num
        JOIN warehouse_code warecode ON ware.wh_code = warecode.s_cate_wh_code
        WHERE inven.goods_num = #{goods_num}
    </select>


	<!-- 상태업데이트_입고 -->
    <update id="updateRecevingStatus">
		    UPDATE transaction
		    SET pro_status = #{pro_status},
		        rec_date = CASE 
		                     WHEN #{pro_status} = '입고 완료' THEN NOW()
		                     WHEN #{pro_status} = '입고 예정' THEN NULL
		                     ELSE rec_date
		                   END
		    WHERE tran_num IN
		    <foreach item="tran_num" index="index" collection="tran_nums" open="(" separator="," close=")">
		        #{tran_num}
		    </foreach>
    </update>
	
	<!-- 상태 업데이트시_상위거래번호 상태도 변경 -->
	<update id="updateRecevingTopTranStatus">
	    UPDATE transaction
	    SET pro_status = #{pro_status},
	        rec_date = CASE 
	                      WHEN #{pro_status} = '입고 완료' THEN NOW()
	                      WHEN #{pro_status} = '입고 예정' THEN NULL
	                      ELSE rec_date
	                    END
	    WHERE tran_num IN
	    <foreach item="top_tran_num" index="index" collection="top_tran_nums" open="(" separator="," close=")">
	        #{top_tran_num}
	    </foreach>
	</update>
	

	<!-- 상태업데이트_출고 -->
    <update id="updateReleaseStatus">
		    UPDATE transaction
		    SET pro_status = #{pro_status},
		        rel_date = CASE 
		                     WHEN #{pro_status} = '출고 완료' THEN NOW()
		                     WHEN #{pro_status} = '출고 준비' THEN NULL
		                     ELSE rel_date
		                   END
		    WHERE tran_num IN
		    <foreach item="tran_num" index="index" collection="tran_nums" open="(" separator="," close=")">
		        #{tran_num}
		    </foreach>
    </update>

	
	<!-- 상태 업데이트시_상위거래번호 상태도 변경 -->
	<update id="updateReleaseTopTranStatus">
	    UPDATE transaction
	    SET pro_status = #{pro_status},
	        rel_date = CASE 
	                      WHEN #{pro_status} = '출고 완료' THEN NOW()
	                      WHEN #{pro_status} = '출고 준비' THEN NULL
	                      ELSE rel_date
	                    END
	    WHERE tran_num IN
	    <foreach item="top_tran_num" index="index" collection="top_tran_nums" open="(" separator="," close=")">
	        #{top_tran_num}
	    </foreach>
	</update>
	
	
	<!-- 발주 리스트 -->
	<select id="purchaseOrderTranList" resultMap="transMap">
		select tran_num, cli_name 
		from transaction t
		join client c on t.cli_num = c.cli_num
		where tran_cate_code = "PO"
	</select>
	
	<!-- 교환 리스트 -->
	<select id="exchangeTranList" resultMap="transMap">
		select tran_num, cli_name 
		from transaction t
		join client c on t.cli_num = c.cli_num
		where tran_cate_code = "EX"
	</select>
	
	<!-- 반품 리스트 -->
	<select id="returnTranList" resultMap="transMap">
		select tran_num, cli_name 
		from transaction t
		join client c on t.cli_num = c.cli_num
		where tran_cate_code = "RE"
	</select>
	
	
	
	
	
	
	

</mapper>